# .github/workflows/deploy.yml

name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger workflow on push to the main branch
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx for multi-platform builds (optional but recommended)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my-static-site:latest

      # Step 5: Deploy to the remote server
      - name: Deploy to remote server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Navigate to the project directory containing the docker-compose.yml file
            cd ${{ secrets.PROJECT_PATH }}
            
            # Stop and remove existing services using docker-compose
            docker-compose down
            
            # Pull the latest Docker image (if not using build in compose file)
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-static-site:latest
            
            # Build and start the new containers with docker-compose
            docker-compose up -d --build
            
            # Obtain or renew SSL certificates with Certbot (without www)
            sudo certbot --nginx -d ${{ secrets.DOMAIN }} --non-interactive --agree-tos --email ${{ secrets.EMAIL }}
            
            # Restart Nginx to apply the new certificates
            sudo systemctl restart nginx

